# –ë–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ

# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.
# –ò–∑ –Ω–µ—ë —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–¥—Å—á–µ—Ç–∞
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–∏—Å–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–º –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ
# —á–∏—Å–ª–∞, —Ç–æ –µ—Å—Ç—å, —Å—Ç–æ—è—Ç –≤—Å–ª–µ–¥ –∑–∞ –º–µ–Ω—å—à–∏–º —á–∏—Å–ª–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏
# –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞,
# –±–æ–ª—å—à–∏—Ö –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ.

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:
# 1 2 3 4 5
# Sample Output 1:
# 4
# Sample Input 2:
# 1 1 3 2 2 1 1 1 1
# Sample Output 2:
# 1
# Sample Input 3:
# 5 4 3 2 1
# Sample Output 3:
# 0

# lst = list(map(int, input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:\n").split()))

# count = 0
# for i in range(1, len(lst)):
#     if lst[i-1]<lst[i]:
#         count+=1

# print(count)

# # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è

alphabetE = \
    ['a', 'b', 'v', 'g', 'd', 'e', 'yo', 'zh', 'z', 'i', 'y', 'k', 'l', 'm', 'n', 'o',
     'p', 'r', 's', 't', 'u', 'f', 'kh', 'ts', 'ch', 'sh', 'shch', '', 'i', '\'', 'e',
     'yu', 'ya', ',', '.', '!', '?', ' ']
alphabetR = \
    ["–∞", "–±", "–≤", "–≥", "–¥", "–µ", "—ë", "–∂", "–∑", "–∏", "–π", "–∫", "–ª", "–º", "–Ω", "–æ", "–ø",
     "—Ä", "—Å", "—Ç", "—É", "—Ñ", "—Ö", "—Ü", "—á", "—à", "—â", "—ä", "—ã", "—å", "—ç", "—é", "—è", ",", ".", "!", "?", " "]

base = input('Input word: ')
word = []

for i in range(len(base)):
    word.append(alphabetR.index(base[i]))
    index = word[i]
    print(alphabetE[index], end='')

# for i in range(len(base)):
#     print(base[i].replace(alphabetR[alphabetR.index(base[i])],alphabetE[alphabetR.index(base[i])]), end = '')

# # dictionary

# transleterate = \
#     {'a': "–∞", 'b': "–±", 'v': "–≤", 'g': "–≥", 'd': "–¥", 'e': "–µ", 'yo': "—ë", 'zh': "–∂",
#      'z': "–∑", 'i': "–∏", 'y': "–π", 'k': "–∫", 'l': "–ª", 'm': "–º", 'n': "–Ω", 'o': "–æ",
#      'p': "–ø", 'r': "—Ä", 's': "—Å", 't': "—Ç", 'u': "—É", 'f': "—Ñ", 'kh': "—Ö", 'ts': "—Ü",
#      'ch': "—á", 'sh': "—à", 'shch': "—â", '': "—ä", 'i': "—ã", '\'': "—å", 'e': "—ç",
#      'yu': "—é", 'ya': "—è", ',': ",", '.': ".", '!': "!", '?': "?", ' ': " "}

# text = input('input text: ')

# for i in text:
#     print(transleterate[i], end="")

# t = ['a', 'b', 'v', 'g', 'd', 'e', 'zh', 'z', 'i', 'y', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f', 'kh', 'ts', 'ch', 'sh', 'shch', '', 'y', '', 'e', 'yu', 'ya']

# start_index = ord('–∞')
# title = '–ü–µ—Ä–µ–≤–æ–¥–∏–º —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, —Å–µ–π—á–∞—Å!'
# print(title.lower())

# slug = ""
# for s in title.lower():

#     if "–∞" <= s <= "—è":
#         slug += t[ord(s) - ord('–∞')]

#     else:
#         slug += s



# print(slug)
